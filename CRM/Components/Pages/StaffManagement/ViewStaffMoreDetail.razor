@page "/viewstaffmoredetail/{Id:guid}"
@using Microsoft.AspNetCore.Authorization
@using CRM.Data
@using System.Security.Claims
@using Microsoft.EntityFrameworkCore
@attribute [Authorize]
@inject ApplicationDbContext dbContext
@inject NavigationManager navManager
@inject AuthenticationStateProvider AuthenticationStateProvider

<h3>Staff Details</h3>

@if (loading)
{
    <div class="spinner-border" role="status">
        <span class="visually-hidden">Loading...</span>
    </div>
}
else if (staff == null)
{
    <div class="alert alert-warning" role="alert">
        Staff member not found.
    </div>
}
else
{
    <div class="card">
        <div class="card-body">
            <h5 class="card-title">@staff.StaffName</h5>
            <div class="mb-3">
                <strong>Staff ID: </strong> @staff.StaffId <br />
                <strong>Staff Email: </strong>@staff.Email<br />
                <strong>Staff Phone Number: </strong>@staff.PhoneNum<br />
                <strong>Address: </strong>@staff.Address<br/>
				<strong>Hours Logged: </strong>@staff.Hours_Logged<br />

            </div>

            <h6 class="card-subtitle mb-3">Assigned Projects</h6>
            @if (!staff.AssignedProjects.Any())
            {
                <p>No projects assigned.</p>
            }
            else
            {
                <div class="table-responsive">
                    <table class="table table-striped">
                        <thead>
                            <tr>
                                <th>Project Name</th>
                                <th>Details</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var project in staff.AssignedProjects)
                            {
                                <tr>
                                    <td>@project.Name</td>
                                    <td>@project.Details</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
        </div>
    </div>

    <div class="mt-3">
        <button class="btn btn-warning btn-sm me-1" @onclick="@(() => navManager.NavigateTo($"/editstaff/{Id}"))">
            <i class="oi oi-pencil"></i> Edit Staff
        </button>
        <button class="btn btn-secondary btn-sm me-1" @onclick="@(() => navManager.NavigateTo("/viewstaff"))">
            <i class="oi oi-arrow-left"></i> Back to Staff List
        </button>
    </div>
}

@code {
    [Parameter]
    public Guid Id { get; set; }

    private Staff? staff;
    private bool loading = true;

    protected override async Task OnInitializedAsync()
    {
        await LoadStaffDetails();
    }

    private async Task LoadStaffDetails()
    {
        try
        {
            staff = await dbContext.Staff
                .Include(s => s.AssignedProjects)
                .FirstOrDefaultAsync(s => s.StaffId == Id);
        }
        finally
        {
            loading = false;
        }
    }
}
