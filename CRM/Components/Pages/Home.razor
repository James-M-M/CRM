@page "/"
@using CRM.Components.Layout
@layout MainLayout
@using CRM.Data
@using Microsoft.EntityFrameworkCore;
@using Microsoft.JSInterop;
@using System.Security.Claims
@inject IJSRuntime JSRuntime
@inject ApplicationDbContext dbContext;
@inject AuthenticationStateProvider AuthenticationStateProvider
<PageTitle>Home</PageTitle>

<h1>Hello welcome to the CRM system!</h1>
<p>Please use the sidebar to navigate the system</p>



<select @onchange="OnStaffSelected" class="form-select">
    <option value="">-- Select Staff --</option>
    @foreach (var staff in staffList)
    {
        <option value="@staff.StaffId">@staff.StaffName</option>
    }
</select>

@if (selectedStaffId == Guid.Empty)
{
    <p>Please select a staff member to view their projects.</p>
}
else if (projects == null)
{
    <p>Loading projects...</p>
}
else if (!projects.Any())
{
    <p>No projects assigned to this staff member.</p>
}
else
{
    <table class="table mt-3">
        <thead>
            <tr>
                <th>Name</th>
                <th>Details</th>
                <th>Priority</th>
                <th>Status</th>
                <th>Created</th>
                <th>Last Updated</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var project in projects)@*goes through the projects list created from project class*@
            {
                <tr>
                    <td>@project.Name</td>
                    <td>@project.Details</td>
                    <td>@project.Priority</td>
                    <td>@(project.isCompleted ? "Completed" : "In Progress")</td>@*? is true : is False*@
                    <td>@project.CreatedAt.ToShortDateString()</td>
                    <td>@project.LastUpdated?.ToShortDateString()</td> @*shortens the datetime to just date*@
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<Staff> staffList = new();
    private List<Project> projects;
    private Guid selectedStaffId = Guid.Empty;
    
    //loads data
    protected override async Task OnInitializedAsync()
    {
        staffList = await dbContext.Staff.OrderBy(s => s.StaffName).ToListAsync();
    }
    //selects the projects for only the staff selected
    private async Task OnStaffSelected(ChangeEventArgs e)
    {
        var selectedValue = e.Value?.ToString();
        if (Guid.TryParse(selectedValue, out var staffId))
        {
            selectedStaffId = staffId;
            projects = await dbContext.Projects
                .Include(p => p.AssignedStaff)//loads assigned staff list
                .Where(p => p.AssignedStaff.Any(s => s.StaffId == selectedStaffId))//compares staff id to the ids on projects
                .ToListAsync();//sets the data to a list then shows the details
        }
        else
        {
            selectedStaffId = Guid.Empty;
            projects = null;
        }
    }
}