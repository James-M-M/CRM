@page "/forums/reply/{Id:guid}"
@using CRM.AzureBlobStorage.Interface
@using CRM.Data.DTO
@using Microsoft.AspNetCore.Authorization
@using CRM.Data
@using System.ComponentModel.DataAnnotations
@using System.Security.Claims
@attribute [Authorize]
@inject ApplicationDbContext dbContext
@inject NavigationManager navManager
@inject AuthenticationStateProvider AuthenticationStateProvider
@using Microsoft.AspNetCore.Components.Forms


<h3>Reply</h3>
<div class="table-responsive">
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Question Title</th>
                <th>Customer</th>
                
            </tr>
        </thead>
        <tbody>
            @foreach (var question in Questions)
            {
                <tr>
                    <td>@question.Title</td>
                    <td>@question.Customer?.Name</td>
                    <td>
                        
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>



@code {
    private List<Forum> Questions = new();
    private List<Customer> Customers = new();
    public Guid Id { get; set; }
    private Forum? Replies = new();
    protected override async Task OnInitializedAsync()
    {
        if(Id != Guid.Empty)
        {
            Replies = await dbContext.Forums
                .Include(p => p.Customer)
                .FirstOrDefaultAsync(f => f.Id == Id);
        }
    }
}
