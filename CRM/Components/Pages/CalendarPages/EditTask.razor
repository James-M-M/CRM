@page "/calendar/edittask"
@inject DialogService DialogService
@using CRM.AzureBlobStorage.Interface
@using CRM.Data.DTO
@using Microsoft.AspNetCore.Authorization
@using CRM.Data
@using System.ComponentModel.DataAnnotations
@using System.Security.Claims
@attribute [Authorize]
@inject ApplicationDbContext dbContext
@inject NavigationManager navManager
@inject AuthenticationStateProvider AuthenticationStateProvider
@using Microsoft.AspNetCore.Components.Forms

<RadzenTemplateForm TItem="Calendar" Data="@model" Submit=@OnSubmit>
    <RadzenStack Gap="1rem">
        <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Wrap="FlexWrap.Wrap">
            <RadzenLabel Text="Title" Style="width: 6rem;" />
            <RadzenTextBox @bind-Value="@model.Text" Name="Text" Style="width: 12rem;" />
            <RadzenRequiredValidator Component="Text" Text="Title is required" />
        </RadzenStack>
        <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Wrap="FlexWrap.Wrap">
            <RadzenLabel Text="Start" Style="width: 6rem;" />
            <RadzenDatePicker @bind-Value="@model.Start" Name="Start" ShowTime="true" Style="width: 12rem;" />
            <RadzenRequiredValidator Component="Start" Text="Start is required" />
        </RadzenStack>
        <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Wrap="FlexWrap.Wrap">
            <RadzenLabel Text="End" Style="width: 6rem;" />
            <RadzenDatePicker Name="End" @bind-Value="@model.End" ShowTime="true" Style="width: 12rem;" />
            <RadzenRequiredValidator Component="End" Text="End is required" />
        </RadzenStack>
        <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.End" Gap="1rem">
            @if (model.CalendarId != Guid.Empty)
            {
                <RadzenButton ButtonStyle="ButtonStyle.Danger" Click=@OnDelete Text="Delete" />
            }
            <RadzenButton ButtonType="ButtonType.Submit" Text="Save" />
        </RadzenStack>
    </RadzenStack>
</RadzenTemplateForm>

@code {
    [Parameter]
    public Calendar Appointment { get; set; }

    Calendar model = new Calendar();

    protected override void OnParametersSet()
    {
        model = Appointment ?? new Calendar();
    }

    async Task OnSubmit(Calendar model)
    {
        if (model.CalendarId == Guid.Empty)
        {
            model.CalendarId = Guid.NewGuid();
            await dbContext.Calendars.AddAsync(model);
        }
        else
        {
            dbContext.Calendars.Update(model);
        }
        
        await dbContext.SaveChangesAsync();
        DialogService.Close(model);
    }

    async Task OnDelete()
    {
        if (model.CalendarId != Guid.Empty)
        {
            dbContext.Calendars.Remove(model);
            await dbContext.SaveChangesAsync();
        }
        DialogService.Close(null);
    }
}

