@page "/project/{ProjectId:guid}"
@using Microsoft.AspNetCore.Authorization
@using CRM.Data
@using Microsoft.EntityFrameworkCore
@attribute [Authorize]
@inject ApplicationDbContext dbContext
@inject NavigationManager navManager

<h3>Project Details</h3>

@if (project != null)
{
    <div class="card">
        <div class="card-body">
            <h4 class="card-title">@project.Name</h4>
            <div class="mb-3">
                <strong>Customer:</strong> @project.Customer?.Name
            </div>
            <div class="mb-3">
                <strong>Details:</strong>
                <p>@project.Details</p>
            </div>
            <div class="mb-3">
                <strong>Creation time:</strong>
                <p>@project.CreatedAt</p>
            </div>
            <div class="mb-3">
                <strong>Last updated:</strong>
                <p>@project.LastUpdated</p>
            </div>
            <div class="mb-3">
                <strong>Assigned Staff:</strong>
                <ul>
                    @foreach (var staff in project.AssignedStaff)
                    {
                        <li>@staff.StaffName</li>
                    }
                </ul>
            </div>
            <div class="mb-3">
                <strong>Hours spent on project:</strong>
                <p>@project.HoursSpentOnProject</p>
            </div>
            <div class="mb-3">
                <strong>Project Priority:</strong>
                <p>@project.Priority</p>
            </div>
            @if (project != null)
            {
                <div class="col-md-6">
                    @{
                        var badgeClass = project.isCompleted ? "bg-success" : "bg-warning";
                        var badgeText = project.isCompleted ? "Completed" : "In Progress";
                    }
                    <span class="badge @badgeClass">@badgeText</span>
                </div>
            }
            @if (project.ProjectCompleteDate != null)
            {
                <div class="mt-2 text-muted">
                    Completed on: @project.ProjectCompleteDate?.ToLocalTime().ToString("f")
                </div>
            }


            @if (project.Attachments?.Any() == true)
            {
                <div class="mb-3">
                    <strong>Attachments:</strong>
                    <div class="row">
                        @foreach (var attachment in project.Attachments)
                        {
                            <div class="col-md-4 mb-3">
                                @if (attachment.ContentType.StartsWith("image/"))
                                {
                                    <img src="@attachment.BlobUrl" alt="@attachment.FileName" class="img-fluid rounded border" />
                                }
                                else
                                {
                                    <a href="@attachment.BlobUrl" target="_blank">@attachment.FileName</a>
                                }
                            </div>
                        }
                    </div>
                </div>
            }
            <button class="btn btn-primary me-2" @onclick="@(() => navManager.NavigateTo($"/editproject/{ProjectId}"))">Edit Project</button>
            <button class="btn btn-secondary" @onclick="GoBack">Back to Projects</button>
        </div>
    </div>
}

@code {
    [Parameter]
    public Guid ProjectId { get; set; }

    private Project? project;

    protected override async Task OnInitializedAsync()
    {
        project = await dbContext.Projects
            .Include(p => p.Customer)
            .Include(p => p.AssignedStaff)
            .Include(p => p.Attachments)
            .FirstOrDefaultAsync(p => p.ProjectId == ProjectId);
    }

    private void GoBack()
    {
        navManager.NavigateTo("/ViewProjects");
    }
}
